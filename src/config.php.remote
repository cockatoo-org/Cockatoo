<?php
/**
 * config.php - Basic config
 *  
 * @access public
 * @package cockatoo
 * @author hiroaki.kubota <hiroaki.kubota@mail.rakuten.com> 
 * @version $Id$
 * @copyright Copyright (C) 2011, rakuten 
 */
namespace Cockatoo;
chdir(dirname(__FILE__));
$COCKATOO_ROOT=getenv('COCKATOO_ROOT');
if ( ! $COCKATOO_ROOT ) {
  $COCKATOO_ROOT=dirname(__FILE__) .'/';
  putenv('COCKATOO_ROOT='.$COCKATOO_ROOT);
}
# PHP settings
ini_set('error_reporting',2039); # E_ALL & ^E_NOTICE
ini_set('log_errors','On');
ini_set('display_errors','Off');
ini_set('error_log',$COCKATOO_ROOT . '/logs/php_error.log');


require_once($COCKATOO_ROOT . 'def.php');

class Config {
  /**
   * Specify the application path if you want to run only one application on this domain.
   *   ex> '/wiki/default'
   */
  const APP_OCCUPATION = false;
  /**
   * Service MODE
   *   You should set Def::MODE_NORMAL in service environment.
   */
  const Mode           = Def::MODE_NORMAL;

  /**
   * The redirect path that when unhandled error occured.
   */
  const ErrorRedirect  = '/error.html';

  /**
   * Path to files
   */
  const CommonCSS      = 'css/cockatoo.css';
  const CommonJs       = 'js/cockatoo.js';

  /**
   * Session cookie name
   */
  const SESSION_COOKIE = 'ALB_SESID';

  /**
   * Request analizer
   */
  const RequestParser     = 'Cockatoo\DefaultRequestParser';
  const DeviceSelector    = 'Cockatoo\DefaultDeviceSelector'; 

  /**
   * Beak serializer
   */
  const BeakPacker     = 'Cockatoo\DefaultBeakPacker';

  /**
   * Gateway socket path
   */
  const IPCDirectory   = '/tmp';

  const ActionTimeout  = 1000000;  // @@@ Actually, it's valid of the two times of the specified value ! so this means 10 sec.

  /**
   * PID
   */
  static public $PID;
  /**
   * BEAK drivers
   */
  static public $BEAKS;
  /**
   * BEAK scheme-list
   */
  static public $SYS_BEAKS;
  /**
   * Memcached switch for beak cache
   */
  static public $UseMemcache;
  /**
   * Dynamic locator switch from zookeeper
   */
  static public $UseZookeeper;
  static public $ZookeeperCacheFile;
  /**
   * Static locator
   */
  static public $BeakLocation;
  /**
   * Log
   */
  static public $Loglv;
  static public $LogDataDump;
  static public $LogFile;
  /**
   * Measure of the zmq socket leak
   */
  static public $Error2Die;

  public static function init () {
    if ( self::$init ) {
      //--------------------
      // LOG settings
      //--------------------
      self::$Loglv   = Def::LOGLV_INFO | Def::LOGLV_PERFORMANCE0 | Def::LOGLV_PERFORMANCE1;
      self::$LogDataDump = false;
      /**
       * Filename , STDOUT or STDIN
       */
      $COCKATOO_ROOT=getenv('COCKATOO_ROOT');
      self::$LogFile = $COCKATOO_ROOT . '/logs/cockatoo.log';

      //--------------------
      // Beak cache settings
      //--------------------
      self::$UseMemcache            = array('127.0.0.1:11211');

      /**
       * BEAK Driver switch
       */
      // Cluster mode (on mongo)
      self::$BEAKS = array (
        // Local mode
        Def::BP_CMS      => 'Cockatoo\BeakMongo'   ,
        // Def::BP_SESSION  => 'Cockatoo\BeakMongo'   ,
        Def::BP_SESSION  => 'Cockatoo\BeakMemcached'   ,
        Def::BP_LAYOUT   => 'Cockatoo\BeakMongo'   ,
        Def::BP_COMPONENT=> 'Cockatoo\BeakMongo'   ,
        Def::BP_STATIC   => 'Cockatoo\BeakMongo'   ,
        Def::BP_STRAGE   => 'Cockatoo\BeakMongo'   ,
        Def::BP_ACTION   => 'Cockatoo\BeakProxy' ,
        null
        );
      /**
       * Static locations.
       *  @@@ Todo:
       *    $BeakLocation should be merged with $BEAK but have to consider zookeeper ...
       */
      self::$BeakLocation = array (
        'cms://services-cms/'           => array('127.0.0.1:27017'),
        'layout://core-layout/'         => array('127.0.0.1:27017'),
        'component://core-component/'   => array('127.0.0.1:27017'),
        'static://core-static/'         => array('127.0.0.1:27017'),
        'layout://wiki-layout/'         => array('127.0.0.1:27017'),
        'component://wiki-component/'   => array('127.0.0.1:27017'),
        'static://wiki-static/'         => array('127.0.0.1:27017'),
        'strage://wiki-strage/'         => array('127.0.0.1:27017'),
        'action://wiki-action/'         => array('127.0.0.1:22651'),
        'session://wiki-session/'       => array('127.0.0.1:27017')
        );
      //--------------------
      // Zookeeper ( dynamic locations )
      //--------------------
      self::$Zookeeper           = array('l27.0.0.1:2181');
      self::$ZookeeperCacheFile  = $COCKATOO_ROOT . '/daemon/var/zoo.json';

      //--------------------
      // FOR SYSTEM
      //--------------------
      self::$PID = posix_getpid();
      self::$init = false;
      // Domain suffix
      self::$SYS_BEAKS = array (
        Def::BP_SESSION  => 'session'  ,
        Def::BP_LAYOUT   => 'layout'   ,
        Def::BP_COMPONENT=> 'component',
        Def::BP_STATIC   => 'static'   ,
        Def::BP_STRAGE   => 'strage'   ,
        Def::BP_ACTION   => 'action'   ,
        Def::BP_SEARCH   => 'search'   ,
        Def::BP_CMS      => 'cms',
        null
        );
      // @@@ Todo: 
      //   It sounds like there are some bugs about connection pool in some httpd_modules.
      //   Then we must kill the httpd process FORCIBLY...
      self::$Error2Die = 10;
      //
      if ( Config::Mode == Def::MODE_DEBUG ) {
        ini_set('display_errors','On');
      }
    }
  }
  static private $init = true;
}
Config::init();

require_once($COCKATOO_ROOT.'utils/ClassLoader.php');
\ClassLoader::addClassPath($COCKATOO_ROOT.'libs');

require_once($COCKATOO_ROOT.'utils/log.php');
