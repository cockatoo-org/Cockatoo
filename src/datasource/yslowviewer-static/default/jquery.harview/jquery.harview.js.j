{"etag":"\"645e3b5e-94e9-a2f2-91d495a92cd58d31\"","type":"text\/javascript","exp":null,"desc":null,"data":"\/**\n * jquery.harview.js - ????\n *  \n * @package ????\n * @access public\n * @author hiroaki.kubota <hiroaki.kubota@mail.rakuten.com> \n * @create 2012\/03\/27\n * @version $Id$\n * @copyright Copyright (C) 2012, rakuten \n *\/\n\n;$(function(){\n    $.extend($.fn,{\n      harViewer: function(har,options){\n\tif (!this.length) {\n\t  return;\n\t}\n\treturn new $.HarViewer($(this),har,options);\n      }\n    }); \n\n    $.HarViewer = function (node,har,options) {\n      var t = this;\n      t.root = node;\n      t.settings = $.extend( {}, $.HarViewer.defaults, options );\n      t.HAR = har;\n      t.init();\n    };\n\n  function basename(path) {\n    return path.replace(\/\\\\\/g,'\/').replace( \/.*\\\/\/, '' );\n  }\n  function b2k(bytes) {\n    return Math.floor(bytes*10\/1024)\/10;\n  }\n  function m2s(ms) {\n    return Math.floor(ms*100\/1000)\/100;\n  }\n  function mime2type(mime) {\n    if       ( \/html\/i.test(mime) ) {\n      return 'html';\n    }else if ( \/image\/i.test(mime) ) {\n      return 'image';\n    }else if ( \/javascript\/i.test(mime) ) {\n      return 'js';\n    }else if ( \/json\/i.test(mime) ) {\n      return 'js';\n    }else if ( \/css\/i.test(mime) ) {\n      return 'css';\n    }else if ( \/text\/i.test(mime) ) {\n      return 'html';\n    }\n    return 'unknown';\n  }\n  function getTime(time){\n    var t = new Date(time).getTime();\n    if ( t ) {\n      return t;\n    }\n    var ts = time.match(\/^(.+)[+\\-](.+)\/);\n    var t = new Date(ts[1]).getTime();\n    return t;\n\/\/console.log(t);\n  }\n\n    $.extend($.HarViewer, {\n      defaults: {\n\tbarWidth:650\n      },\n      prototype: {\n\talert: function(msg){\n\t  $('<div class=\"alert\">'+msg+'<\/div>').prependTo(this.root);\n\t},\n\tinit: function(){\n\t  if ( this.HAR.log.pages.length != 1 ) {\n\t    this.alert('this HAR contains multiple page info !!');\n\t  }\n\t  this.drawHar(this.HAR.log.pages[0]);\n\t},\n\tdrawHar: function(page){\n\t    $('<div class=\"har\">' + \n\t      ' <div class=\"pageName\">'+\n\t      '  <span class=\"twisty\"><\/span>'+\n\t      '  <span class=\"pageName\">'+page.title+'<\/span>'+\n\t      ' <\/div>'+\n\t      ' <table><tbody class=\"hvbody\"><\/tbody><\/table>'+\n\t      '<\/div>').appendTo(this.root);\n\t  this.hvbody = this.root.find('tbody.hvbody');\n\t  this.barRatio = 0.95 \/ this.HAR.log.pages[0].pageTimings.onLoad;\n\t  this.startDate=getTime(this.HAR.log.pages[0].startedDateTime);\n\t  var size  = 0;\n\t  var csize = 0;\n\t  for ( var i in this.HAR.log.entries ) {\n\t    var is_cache = this.drawEntry(this.HAR.log.entries[i]);\n\t    \/\/ size\n\t    size+=this.HAR.log.entries[i].response.content.size\n\t    \/\/ cache\n\t    if ( is_cache ) {\n\t      csize+=this.HAR.log.entries[i].response.content.size\n\t    }\n\t  }\n\t  $('<div class=\"last\">'+\n\t    '<span class=\"summary\">'+this.HAR.log.entries.length+' Requests<\/span>'+\n\t    '<span class=\"size\">'+b2k(size)+' KB<\/span>'+\n\t    '<span class=\"cache\">('+b2k(csize)+'  From Cache)<\/span>'+\n\t    '<span class=\"resp\">'+m2s(this.HAR.log.pages[0].pageTimings.onContentLoad)+'s (onload:'+m2s(this.HAR.log.pages[0].pageTimings.onLoad)+'s)<\/span>'+\n\t    '<\/div>').appendTo(this.root.find('div.har'));\n\n\t  \/\/ JS\n\t  this.root.find('.twisty').click(function(ev){\n\t    if ( $(this).hasClass('plus') ) {\n\t\t$(this).removeClass('plus');\n\t\t$(this).parent().next().show();\n\t    }else {\n\t\t$(this).addClass('plus');\n\t\t$(this).parent().next().hide();\n\t    }\n\t  });\n\t  this.root.find('div.url').click(function(ev){\n\t    $(this).parent().prev().click();\n\t  });\n\t  this.hvbody.find('tr.detail  > td >  ul.tab > li').click(function(ev){\n\t    console.log($(this).parent());\n\t      $(this).parent().find('> li').removeAttr('selected');\n\t      $(this).attr('selected','selected');\n\t    var idx = $(this).attr('idx');\n\t      $(this).closest('td').find('> div').removeAttr('selected');\n\t      $(this).closest('td').find('> div[idx=\"'+idx+'\"]').attr('selected','selected');\n\t  });\n\t},\n\tcalcStart: function(time){\n\t  return (getTime(time) - this.startDate);\n\t},\n\tcalcMargin: function(time){\n\t  return Math.floor(time*this.barRatio*this.settings.barWidth);\n\t},\n\tdrawEntry: function(entry){\n\t  \/\/ Parse request header\n\t  var reqHeadersHTML='<h6>Request Headers<\/h6><table><tbody>';\n\t  for( var i in entry.request.headers){\n\t    if ( entry.request.headers[i].name ==='Host'){\n\t      var host=entry.request.headers[i].value;\n\t    }\n\t    reqHeadersHTML+='<tr><th>'+entry.request.headers[i].name+'<\/th><td>'+entry.request.headers[i].value+'<\/td><\/tr>';\n\t  }\n\t  reqHeadersHTML+='<\/tbody><\/table>';\n\t  \/\/ Parse response header\n\t  var caches = [];\n\t  var resHeadersHTML='<h6>Response Headers<\/h6><table><tbody>';\n\t  for( var i in entry.response.headers){\n\t    resHeadersHTML+='<tr><th>'+entry.response.headers[i].name+'<\/th><td>'+entry.response.headers[i].value+'<\/td><\/tr>';\n\t    if ( entry.response.headers[i].name === 'Expires' ){\n\t      caches.push({name:entry.response.headers[i].name,value:entry.response.headers[i].value});\n\t    }else if ( entry.response.headers[i].name === 'Etag' ){\n\t      caches.push({name:entry.response.headers[i].name,value:entry.response.headers[i].value});\n\t    }else if ( entry.response.headers[i].name === 'Vary' ){\n\t      caches.push({name:entry.response.headers[i].name,value:entry.response.headers[i].value});\n\t    }else if ( entry.response.headers[i].name === 'Cache-Control' &&\n\t\t      !entry.response.headers[i].value === 'private' &&\n\t\t      !entry.response.headers[i].value === 'no-cache'){\n\t      caches.push({name:entry.response.headers[i].name,value:entry.response.headers[i].value});\n\t    }\n\t  }\n\t  resHeadersHTML+='<\/tbody><\/table>';\n\n\t  \/\/ Parse params\n\t  var queryStringHTML='<table><tbody>';\n\t  for( var i in entry.request.queryString ){\n\t    queryStringHTML+='<tr><th>'+entry.request.queryString[i].name+'<\/th><td>'+entry.request.queryString[i].value+'<\/td><\/tr>';\n\t  }\n\t  queryStringHTML+='<\/tbody><\/table>';\n\t  \/\/ Parse POST\n\t  var postHTML='<table><tbody>';\n\t  if ( entry.request.postData && entry.request.postData.params ) {\n\t    for( var i in entry.request.postData.params ){\n\t      postHTML+='<tr><th>'+entry.request.postData.params[i].name+'<\/th><td>'+entry.request.postData.params[i].value+'<\/td><\/tr>';\n\t    }\n\t    postHTML+='<\/tbody><\/table>';\n\t  }\n\/\/  console.log(entry.request.url);\n\/\/  console.log(entry);\n\t  \/\/ Parse cache\n\t  var cachesHTML = ' <h6>Response<\/h6><table><tbody>';\n\t  for( var i in caches){\n\t    cachesHTML+='<tr><th>'+caches[i].name+'<\/th><td>'+caches[i].value+'<\/td><\/tr>';\n\t  }\n\t  cachesHTML+='<\/tbody><\/table>';\n\t  cachesHTML+= ' <h6>afterRequest<\/h6><table><tbody>';\n\t  for( var i in entry.cache.afterRequest){\n\t    cachesHTML+='<tr><th>'+i+'<\/th><td>'+entry.cache.afterRequest[i]+'<\/td><\/tr>';\n\t  }\n\t  cachesHTML+='<\/tbody><\/table>';\n\t  var startTime = this.calcStart(entry.startedDateTime);\n\t  var domM      = this.calcMargin(this.HAR.log.pages[0].pageTimings.onContentLoad);\n\t  var loadedM   = this.calcMargin(this.HAR.log.pages[0].pageTimings.onLoad);\n\t  var startM    = this.calcMargin(startTime);\n\t  var blockM    = this.calcMargin(entry.timings.blocked);\n\t  var dnsM      = this.calcMargin(entry.timings.dns);\n\t  var connectM  = this.calcMargin(entry.timings.connect);\n\t  var sendM     = this.calcMargin(entry.timings.send);\n\t  var waitM     = this.calcMargin(entry.timings.wait);\n\t  var receiveM  = this.calcMargin(entry.timings.receive);\n\n\t  var type      = mime2type(entry.response.content.mimeType);\n\n\t    $('<tr class=\"row\" type=\"'+type+'\">'+\n\t      ' <td class=\"padding\"><\/td>'+\n\t      ' <td class=\"twisty plus\"><\/td>'+\n\t      ' <td class=\"col url\">'+\n\t      '  <div class=\"col url\"> '+\n\t      '   <span class=\"full\">'+entry.request.url+'<\/span>'+\n\t      '   <span class=\"href\">'+entry.request.method+' '+basename(entry.request.url)+'<\/span>'+\n\t      '  <\/div>'+\n\t      ' <\/td>'+\n\t      ' <td class=\"col status\"><div class=\"status '+(( caches.length || entry.cache.afterRequest )?'cached':'')+'\"><span>'+entry.response.status+' '+entry.response.statusText+'<\/span><\/div><\/td>'+\n\t      ' <td class=\"col type\"><div class=\"type\"><span>'+entry.response.content.mimeType+'<\/span><\/div><\/td>'+\n\t      ' <td class=\"col domain\"><div class=\"domain\"><span>'+host+'<\/span><\/div><\/td>'+\n\t      ' <td class=\"col size\"><div class=\"size\"><span>'+b2k(entry.response.content.size)+' KB<\/span><\/div><\/td>'+\n\t      ' <td class=\"timeline\">'+\n\t      '  <div class=\"timeline\" style=\"width:'+this.settings.barWidth+'px\">'+\n\t      '   <div class=\"dom\"    style=\"margin-left:'+domM+                                              'px;\"><\/div>'+\n\t      '   <div class=\"loaded\" style=\"margin-left:'+loadedM+                                           'px;\"><\/div>'+\n\t      '   <div class=\"b bar\"  style=\"margin-left:'+startM+                                            'px;width:'+blockM+'px;\"><\/div>'+\n\t      '   <div class=\"d bar\"  style=\"margin-left:'+(startM+blockM)+                                   'px;width:'+dnsM+'px;\"><\/div>'+\n\t      '   <div class=\"c bar\"  style=\"margin-left:'+(startM+blockM+dnsM)+                              'px;width:'+connectM+'px;\"><\/div>'+\n\t      '   <div class=\"s bar\"  style=\"margin-left:'+(startM+blockM+dnsM+connectM)+                     'px;width:'+sendM+'px;\"><\/div>'+\n\t      '   <div class=\"w bar\"  style=\"margin-left:'+(startM+blockM+dnsM+connectM+sendM)+               'px;width:'+waitM+'px;\"><\/div>'+\n\t      '   <div class=\"r bar\"  style=\"margin-left:'+(startM+blockM+dnsM+connectM+sendM+waitM)+         'px;width:'+receiveM+'px;\"><\/div>'+\n\t      '   <div class=\"t\"      style=\"margin-left:'+(startM+blockM+dnsM+connectM+sendM+waitM+receiveM)+'px\">'+entry.time+'ms<\/div>'+\n\t      '   <div  class=\"box\"><div>'+\n\t      '    <b>+' + startTime+'ms<\/b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Request start time since the beginning<br><br>'+\n\t      '    Request phases start and elapsed time relative to <br> the request start:<br>' +\n\t      '    <table><tbody>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"b bar\" style=\"width:8px\"><\/div><\/td>'+\n\t      '      <td><div class=\"base\">+' + 0 + 'ms<\/span><\/td>'+\n\t      '      <td><div class=\"elaps\">'+entry.timings.blocked+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">Blocking<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"d bar\" style=\"width:8px\"><\/div><\/td>'+\n\t      '      <td><div class=\"base\">+' + entry.timings.blocked + 'ms<\/span><\/td>'+\n\t      '      <td><div class=\"elaps\">'+entry.timings.dns+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">DNS Lookup<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"c bar\" style=\"width:8px\"><\/div><\/td>'+\n\t      '      <td><div class=\"base\">+' + (entry.timings.blocked + entry.timings.dns) + 'ms<\/span><\/td>'+\n\t      '      <td><div class=\"elaps\">'+entry.timings.connect+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">Connecting<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"s bar\" style=\"width:8px\"><\/div><\/td>'+\n\t      '      <td><div class=\"base\">+' + (entry.timings.blocked + entry.timings.dns+entry.timings.connect)+ 'ms<\/span><\/td>'+\n\t      '      <td><div class=\"elaps\">'+entry.timings.send+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">Sending<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"w bar\" style=\"width:8px\"><\/div><\/td>'+\n\t      '      <td><div class=\"base\">+' + (entry.timings.blocked + entry.timings.dns+entry.timings.connect+entry.timings.send)+ 'ms<\/span><\/td>'+\n\t      '      <td><div class=\"elaps\">'+entry.timings.wait+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">Waiting<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"r bar\" style=\"width:8px\"><\/div><\/td>'+\n\t      '      <td><div class=\"base\">+' + (entry.timings.blocked + entry.timings.dns+entry.timings.connect+entry.timings.send+entry.timings.wait)+ 'ms<\/span><\/td>'+\n\t      '      <td><div class=\"elaps\">'+entry.timings.receive+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">Receiving<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '    <\/tbody><\/table>'+\n\t      '    <br>'+\n\t      '    Event timing relative to the request start:<br>' +\n\t      '    <table><tbody>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"dom\" style=\"width:1px;height:10px;margin-top:-3px;\"><\/div><\/td>'+\n\t      '      <td><div class=\"elaps\">'+(this.HAR.log.pages[0].pageTimings.onContentLoad-startTime)+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">DOM Loaded<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '     <tr>'+\n\t      '      <td><div class=\"loaded\" style=\"width:1px;height:10px;margin-top:-3px;\"><\/div><\/td>'+\n\t      '      <td><div class=\"elaps\">'+(this.HAR.log.pages[0].pageTimings.onLoad-startTime)+'ms<\/span><\/td>'+\n\t      '      <td><div class=\"remark\">Page Loaded<\/div><\/td>'+\n\t      '     <\/tr>'+\n\t      '    <\/tbody><\/table>'+\n\t      '   <\/div><\/div>'+\n              '  <\/div>'+\n\t      ' <\/td>'+\n\t      '<\/tr>').appendTo(this.hvbody);\n\t  \/\/ Details\n\t    var tab = $('<tr class=\"detail\"><td class=\"padding\"><\/td><td colspan=\"7\">'+\n\t      ' <ul class=\"tab\">'+\n\t      ' <\/ul><\/td><\/tr>').appendTo(this.hvbody).find('ul.tab');\n\t  \/\/ Headers\n\t    $('<li idx=\"headers\" selected=\"selected\">Headers<\/li>').appendTo(tab);\n\t    $('<div idx=\"headers\" selected=\"selected\">'+resHeadersHTML+reqHeadersHTML+'<\/div>').insertAfter(tab);\n\t  \/\/ Params\n\t  if ( entry.request.queryString.length ) {\n\t      $('<li idx=\"params\" >Params<\/li>').appendTo(tab);\n\t      $('<div idx=\"params\">'+queryStringHTML+'<\/div>').insertAfter(tab);\n\t  }\n\t  \/\/ POST\n\t  if ( entry.request.postData && entry.request.postData.params ) {\n\t      $('<li idx=\"post\" >POST<\/li>').appendTo(tab);\n\t      $('<div idx=\"post\">'+postHTML+'<\/div>').insertAfter(tab);\n\t  }\n\t  \/\/ Cache\n\t  if ( caches.length || entry.cache.afterRequest ) {\n\t      $('<li idx=\"cache\" >Cache<\/li>').appendTo(tab);\n\t      $('<div idx=\"cache\">'+cachesHTML+'<\/div>').insertAfter(tab);\n\t  }\n\t  \/\/  li\n\t    $('<li class=\"last\"><\/li>').appendTo(tab);\n\t  return ( caches.length  || entry.cache.afterRequest);\n\t  }\n\t}\n    });\n})\n\/*\n$(function(){\n  var HAR={\"log\":...};\n<!--\n $('#har').harViewer(HAR);\n-->\n});\n<div id=\"har\"><\/div>\n\n*\/","_u":"jquery.harview\/jquery.harview.js"}