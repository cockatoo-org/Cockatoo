{"etag":"cd99cb8-1c0-84374a13","type":"text\/javascript","exp":"86400","desc":null,"data":"\/*\nFlot plugin for showing crosshairs, thin lines, when the mouse hovers\nover the plot.\n\n  crosshair: {\n    mode: null or \"x\" or \"y\" or \"xy\"\n    color: color\n    lineWidth: number\n  }\n\nSet the mode to one of \"x\", \"y\" or \"xy\". The \"x\" mode enables a\nvertical crosshair that lets you trace the values on the x axis, \"y\"\nenables a horizontal crosshair and \"xy\" enables them both. \"color\" is\nthe color of the crosshair (default is \"rgba(170, 0, 0, 0.80)\"),\n\"lineWidth\" is the width of the drawn lines (default is 1).\n\nThe plugin also adds four public methods:\n\n  - setCrosshair(pos)\n\n    Set the position of the crosshair. Note that this is cleared if\n    the user moves the mouse. \"pos\" is in coordinates of the plot and\n    should be on the form { x: xpos, y: ypos } (you can use x2\/x3\/...\n    if you're using multiple axes), which is coincidentally the same\n    format as what you get from a \"plothover\" event. If \"pos\" is null,\n    the crosshair is cleared.\n\n  - clearCrosshair()\n\n    Clear the crosshair.\n\n  - lockCrosshair(pos)\n\n    Cause the crosshair to lock to the current location, no longer\n    updating if the user moves the mouse. Optionally supply a position\n    (passed on to setCrosshair()) to move it to.\n\n    Example usage:\n      var myFlot = $.plot( $(\"#graph\"), ..., { crosshair: { mode: \"x\" } } };\n      $(\"#graph\").bind(\"plothover\", function (evt, position, item) {\n        if (item) {\n          \/\/ Lock the crosshair to the data point being hovered\n          myFlot.lockCrosshair({ x: item.datapoint[0], y: item.datapoint[1] });\n        }\n        else {\n          \/\/ Return normal crosshair operation\n          myFlot.unlockCrosshair();\n        }\n      });\n\n  - unlockCrosshair()\n\n    Free the crosshair to move again after locking it.\n*\/\n\n(function ($) {\n    var options = {\n        crosshair: {\n            mode: null, \/\/ one of null, \"x\", \"y\" or \"xy\",\n            color: \"rgba(170, 0, 0, 0.80)\",\n            lineWidth: 1\n        }\n    };\n    \n    function init(plot) {\n        \/\/ position of crosshair in pixels\n        var crosshair = { x: -1, y: -1, locked: false };\n\n        plot.setCrosshair = function setCrosshair(pos) {\n            if (!pos)\n                crosshair.x = -1;\n            else {\n                var o = plot.p2c(pos);\n                crosshair.x = Math.max(0, Math.min(o.left, plot.width()));\n                crosshair.y = Math.max(0, Math.min(o.top, plot.height()));\n            }\n            \n            plot.triggerRedrawOverlay();\n        };\n        \n        plot.clearCrosshair = plot.setCrosshair; \/\/ passes null for pos\n        \n        plot.lockCrosshair = function lockCrosshair(pos) {\n            if (pos)\n                plot.setCrosshair(pos);\n            crosshair.locked = true;\n        }\n\n        plot.unlockCrosshair = function unlockCrosshair() {\n            crosshair.locked = false;\n        }\n\n        function onMouseOut(e) {\n            if (crosshair.locked)\n                return;\n\n            if (crosshair.x != -1) {\n                crosshair.x = -1;\n                plot.triggerRedrawOverlay();\n            }\n        }\n\n        function onMouseMove(e) {\n            if (crosshair.locked)\n                return;\n                \n            if (plot.getSelection && plot.getSelection()) {\n                crosshair.x = -1; \/\/ hide the crosshair while selecting\n                return;\n            }\n                \n            var offset = plot.offset();\n            crosshair.x = Math.max(0, Math.min(e.pageX - offset.left, plot.width()));\n            crosshair.y = Math.max(0, Math.min(e.pageY - offset.top, plot.height()));\n            plot.triggerRedrawOverlay();\n        }\n        \n        plot.hooks.bindEvents.push(function (plot, eventHolder) {\n            if (!plot.getOptions().crosshair.mode)\n                return;\n\n            eventHolder.mouseout(onMouseOut);\n            eventHolder.mousemove(onMouseMove);\n        });\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            var c = plot.getOptions().crosshair;\n            if (!c.mode)\n                return;\n\n            var plotOffset = plot.getPlotOffset();\n            \n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            if (crosshair.x != -1) {\n                ctx.strokeStyle = c.color;\n                ctx.lineWidth = c.lineWidth;\n                ctx.lineJoin = \"round\";\n\n                ctx.beginPath();\n                if (c.mode.indexOf(\"x\") != -1) {\n                    ctx.moveTo(crosshair.x, 0);\n                    ctx.lineTo(crosshair.x, plot.height());\n                }\n                if (c.mode.indexOf(\"y\") != -1) {\n                    ctx.moveTo(0, crosshair.y);\n                    ctx.lineTo(plot.width(), crosshair.y);\n                }\n                ctx.stroke();\n            }\n            ctx.restore();\n        });\n\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mouseout\", onMouseOut);\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n        });\n    }\n    \n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'crosshair',\n        version: '1.0'\n    });\n})(jQuery);\n","_u":"js\/flot\/jquery.flot.crosshair.js"}