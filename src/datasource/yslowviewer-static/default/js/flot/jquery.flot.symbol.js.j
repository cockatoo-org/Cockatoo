{"etag":"\"df5e5590-2225-d675-fd9f88aaf5fe6301\"","type":"text\/javascript","exp":"86400","desc":null,"data":"\/*\nFlot plugin that adds some extra symbols for plotting points.\n\nThe symbols are accessed as strings through the standard symbol\nchoice:\n\n  series: {\n      points: {\n          symbol: \"square\" \/\/ or \"diamond\", \"triangle\", \"cross\"\n      }\n  }\n\n*\/\n\n(function ($) {\n    function processRawData(plot, series, datapoints) {\n        \/\/ we normalize the area of each symbol so it is approximately the\n        \/\/ same as a circle of the given radius\n\n        var handlers = {\n            square: function (ctx, x, y, radius, shadow) {\n                \/\/ pi * r^2 = (2s)^2  =>  s = r * sqrt(pi)\/2\n                var size = radius * Math.sqrt(Math.PI) \/ 2;\n                ctx.rect(x - size, y - size, size + size, size + size);\n            },\n            diamond: function (ctx, x, y, radius, shadow) {\n                \/\/ pi * r^2 = 2s^2  =>  s = r * sqrt(pi\/2)\n                var size = radius * Math.sqrt(Math.PI \/ 2);\n                ctx.moveTo(x - size, y);\n                ctx.lineTo(x, y - size);\n                ctx.lineTo(x + size, y);\n                ctx.lineTo(x, y + size);\n                ctx.lineTo(x - size, y);\n            },\n            triangle: function (ctx, x, y, radius, shadow) {\n                \/\/ pi * r^2 = 1\/2 * s^2 * sin (pi \/ 3)  =>  s = r * sqrt(2 * pi \/ sin(pi \/ 3))\n                var size = radius * Math.sqrt(2 * Math.PI \/ Math.sin(Math.PI \/ 3));\n                var height = size * Math.sin(Math.PI \/ 3);\n                ctx.moveTo(x - size\/2, y + height\/2);\n                ctx.lineTo(x + size\/2, y + height\/2);\n                if (!shadow) {\n                    ctx.lineTo(x, y - height\/2);\n                    ctx.lineTo(x - size\/2, y + height\/2);\n                }\n            },\n            cross: function (ctx, x, y, radius, shadow) {\n                \/\/ pi * r^2 = (2s)^2  =>  s = r * sqrt(pi)\/2\n                var size = radius * Math.sqrt(Math.PI) \/ 2;\n                ctx.moveTo(x - size, y - size);\n                ctx.lineTo(x + size, y + size);\n                ctx.moveTo(x - size, y + size);\n                ctx.lineTo(x + size, y - size);\n            }\n        }\n\n        var s = series.points.symbol;\n        if (handlers[s])\n            series.points.symbol = handlers[s];\n    }\n    \n    function init(plot) {\n        plot.hooks.processDatapoints.push(processRawData);\n    }\n    \n    $.plot.plugins.push({\n        init: init,\n        name: 'symbols',\n        version: '1.0'\n    });\n})(jQuery);\n","_u":"js\/flot\/jquery.flot.symbol.js"}