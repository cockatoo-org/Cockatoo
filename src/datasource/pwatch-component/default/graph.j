{
"@R":"1343013569",
"type":"HorizontalWidget",
"subject":"graph",
"description":"graph",
"css":"#graph h1 {\n word-wrap: break-word;\n}\n#graph div.graph {\n\/*  margin: 50px; *\/\n  height: 300px;\n  width: 650px;\n}\n#graph div.choises {\n  float: right;\n  border: 1px solid #C08060;\n  padding: 5px;\n  width: 330px;\n  font-size: 0.8em;\n}\n#graph div.choise  > * {\n  vertical-align:middle;\n}\n#graph div.choises h3 {\n  padding:0;\n  margin:0;\n  font-size: 1.2em;\n}\n#graph div.choise > span {\n  border: 1px solid #404040;\n  font-size:0.4em;\n  padding:1px;\n}\n\n#graph #linktext {\n  width: 600px;\n}\n\n#graph label > span.name {\n color:#0000FF;\n display:none;\n}\n#graph label:hover > span.sname {\n display:none;\n}\n#graph label:hover > span.name {\n display:inline;\n}\n\n",
"js":"$(function () {\n  function getUrlVars(){\n    var vars = [], hash; \n    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&'); \n    for(var i = 0; i < hashes.length; i++) { \n      hash = hashes[i].split('='); \n      vars.push(hash[0]); \n      vars[hash[0]] = hash[1]; \n    } \n    return vars;\n  } \n  function clone(src) {\n    var ret;\n    if(src === null ){\n      return src;\n    }else if(src.constructor === Array) {\n      ret = [];\n    } else if(src.constructor === Object) {\n      ret = {};\n    } else {\n      return src;\n    }\n    for(var key in src) {\n      ret[key] = clone(src[key]);\n    }\n    return ret;\n  };\n  function plot(times,data,name){\n    this.times= times;\n    this.org  = data;\n    this.data = clone(this.org);\n    this.name = name;\n    var THIS = this;\n    this.yaxes = [{  \n      min: (THIS.org[0].min!==undefined)?THIS.org[0].min:null,\n      max: (THIS.org[0].max!==undefined)?THIS.org[0].max:null,\n      tickDecimals:0,\n      labelWidth :20,\n      reserveSpace:true,\n\/\/      tickFormatter: function(v,axis){\n\/\/\treturn v.toFixed(axis.tickDecimals) + \"(\" + THIS.org[0].dim +\")\";\n\/\/      }\n      mode: null\n    },{\n      labelWidth :40,\n      reserveSpace:true,\n      alignTicksWithAxis: 1,\n      position: \"right\"\n    }      \n\t\t  ];\n    for( var i in THIS.org ){\n      if ( THIS.org[i].yaxis==2 ) {\n\tthis.yaxes[1]={\t\n\t  min: (THIS.org[i].min!==undefined)?THIS.org[i].min:null,\n\t  max: (THIS.org[i].max!==undefined)?THIS.org[i].max:null,\n\t  tickDecimals:0,\n\t  reserveSpace:true,\n\t  labelWidth :40,\n\t  alignTicksWithAxis: 1,\n          position: \"right\",\n\/\/\t  tickFormatter: function(v,axis){\n\/\/\t    return v.toFixed(axis.tickDecimals) + \"(\" + THIS.org[i].dim +\")\";\n\/\/\t  }\n\t  mode: null\n\t};\n\tbreak;\n      }\n    }\n    this.colors = [];\n    var c = 0x808080;\n      $('<div id=\"cc'+this.name+'\" class=\"choises\"><h3>'+this.name+'<\/h3><\/div>').insertBefore('#'+this.name);\n    var sw = getUrlVars(location.search);\n    for( var i in this.org ) {\n      c += 0x654321;\n      this.colors.push('#'+c.toString(16).substring(0,6));\n      var n = this.name+'_'+i;\n      var checked = '';\n      if ( sw['sw'] ) {\n\tif ( sw[n] ) {\n\t  checked = ' checked=\"checked\"';\n\t}\n      }else{\n\tif ( ! this.org[i].hide ) {\n\t  checked = ' checked=\"checked\"';\n\t}\n      }\n        $('<div class=\"choise\"><span><span style=\"background-color: #' + c.toString(16).substring(0,6) + '\"width=\"8px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/span><\/span> <input id=\"cc'+n+'\" type=\"checkbox\" '+checked+' idx=\"'+i+'\" name=\"'+n+'\"><\/input><label for=\"cc'+n+'\" ><span class=\"sname\">'+this.org[i].label+'<\/span><span class=\"name\">'+((this.org[i].label2)?this.org[i].label2:this.org[i].label)+'<\/span><\/label><\/div>').appendTo('#cc'+this.name);\n\n    }\n\n    $('#cc'+this.name+' input[type=\"checkbox\"]').change(function(ev){\n      THIS.draw();\n    });\n\n    this.genlink = function(){\n      var sw = getUrlVars(location.search);\n      var link=location.protocol+'\/\/'+location.host+location.pathname+'?u='+sw['u']+'&sw=on';\n\t$('input[type=\"checkbox\"]:checked').each(function(){ \n\t  link += '&'+$(this).attr('name')+'=on';\n\t});\n      $('#linktext').val(link);\n      $('#linka').attr('href',link);\n    }\n\n    this.check = function(){\n      for ( var i in this.data){\n\tthis.data[i].data = [];\n      }\n      var cs=[];\n\t$('#cc'+this.name + ' input[type=\"checkbox\"]:checked').each(function(){\n\t  cs.push($(this).attr('idx'));\n\t});\n      for ( var c in cs ){\n\tvar i = cs[c];\n\tthis.data[i].data = this.org[i].data;\n      }\n      this.genlink();\n    }\n\n    this.draw = function (){\n      this.check();\n      $.plot($('#'+this.name), this.data, {\n\tseries: {\n          lines: { show: true },\n          points: { show: true }\n\t},\n\tgrid: { hoverable: true, clickable: true },\n\txaxis: {\n\t  tickFormatter: function(v,axis){\n\t    if ( THIS.times[v] ) {\n\t      return THIS.times[v].substring(5,10).replace(\/-\/,'\/');\n\t    }\n\t    return \"\";\n\t  },\n\n\/\/\t  mode: \"time\", \n\t  mode: null\n\/\/\t  timeformat: \"%y\/%m\/%d-%H:%M\",\n\/\/\t  timeformat: \"%m\/%d<br>%H:%M\",\n\t},\n\tyaxes: this.yaxes,\n\tselection: { mode: \"x\" },\n\tlegend:{\n\t  show: false,\n\t  noColumns: 2,\n\t  backgroundOpacity: 0.1\n\t},\n\tcolors: this.colors\n      });    \n    var previousPoint = null;\n      $('#'+this.name).bind(\"plothover\", function (event, pos, item) {\n\tif (item) {\n          if (previousPoint != item.dataIndex) {\n            previousPoint = item.dataIndex;\n            \n              $('#tt'+THIS.name).remove();\n            var x = item.datapoint[0].toFixed(2),\n            y = item.datapoint[1].toFixed(2);\n            \n              $('<div id=\"tt'+THIS.name+'\">' + item.series.label + '(' + Math.floor(y) + ((item.series.dim)?' '+item.series.dim:'') + ') \/ '+THIS.times[Math.floor(x)]+' <\/div>').css( {\n\t\tposition: 'absolute',\n\t\tdisplay: 'none',\n\t\ttop: item.pageY + 5,\n\t\tleft: item.pageX + 5,\n\t\tborder: '1px solid #fdd',\n\t\tpadding: '2px',\n\t\t'background-color': '#fee',\n\t\topacity: 0.80\n              }).appendTo(\"body\").fadeIn(200);\n          }\n\t}\n\telse {\n            $('#tt'+THIS.name).remove();\n          previousPoint = null;            \n\t}\n      });\n    }\n  }\n\/\/  console.log(data);\n  var times = {};\n  var datas = [{\n    label : 'Response',\n    dim   : 'msec',\n    yaxis : 2,\n    data: []\n  },{\n    label : 'Total requests',\n    data: []\n  },{\n    label : 'HTML',\n    hide  : 1,\n    data: []\n  },{\n    label : 'JS',\n    data: []\n  },{\n    label : 'CSS',\n    data: []\n  },{\n    label : 'IMG',\n    data: []\n  },{\n    label : 'OTHER',\n    hide  : 1,\n    data: []\n  },{\n    label : 'ERROR',\n    hide  : 1,\n    data: []\n  },{\n    label : 'TIMEOUT',\n    data: []\n\/\/  },{\n\/\/    label : 'Total size',\n\/\/    data: []\n  }];\n  function orNull(val){\n    return (typeof(val)==='undefined')?null:val;\n  }\n  for ( var i in data ) {\n    times[i] = data[i]['t'];\n    datas[0].data[i] = [i,orNull(data[i]['ptime'])];\n    datas[1].data[i] = [i,orNull(data[i]['total'])];\n    datas[2].data[i] = [i,orNull(data[i]['html'])];\n    datas[3].data[i] = [i,orNull(data[i]['js'])];\n    datas[4].data[i] = [i,orNull(data[i]['css'])];\n    datas[5].data[i] = [i,orNull(data[i]['img'])];\n    datas[6].data[i] = [i,orNull(data[i]['other'])];\n    datas[7].data[i] = [i,orNull(data[i]['error'])];\n    datas[8].data[i] = [i,orNull(data[i]['timeout'])];\n\/\/    datas[9].data[i] = [i,orNull(data[i]['total_size'])];\n  }\n  graph = new plot(times,datas,'history');\n  graph.draw();\n});\n",
"id":"graph",
"class":"",
"body":"<hr>\n<h1><?cs var:A.pwatch.url ?><\/h1>\n<div id=\"history\" class=\"graph\"><\/div>\n\n<script>\n  var data = <?cs var:A.pwatch.@json ?>;\n<\/script>\n<!--\n<h1>This page<\/h1>\n<input type=\"text\" id=\"linktext\"><\/input><br>\n<a href=\"\" id=\"linka\">link<\/a>\n-->\n",
"action":[
"action:\/\/pwatch-action\/pwatch\/PwatchAction?get"
],
"_u":"graph"
}