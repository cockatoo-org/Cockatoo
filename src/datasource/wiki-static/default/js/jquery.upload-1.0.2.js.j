{"type":"text\/javascript","data":"\/*\n * jQuery.upload v1.0.2\n *\n * Copyright (c) 2010 lagos\n * Dual licensed under the MIT and GPL licenses.\n *\n * http:\/\/lagoscript.org\n *\/\n(function($) {\n\n\tvar uuid = 0;\n\n\t$.fn.upload = function(url, data, callback, type) {\n\t\tvar self = this, inputs, checkbox, checked,\n\t\t\tiframeName = 'jquery_upload' + ++uuid,\n\t\t\tiframe = $('<iframe name=\"' + iframeName + '\" style=\"position:absolute;top:-9999px\" \/>').appendTo('body'),\n\t\t\tform = '<form target=\"' + iframeName + '\" method=\"post\" enctype=\"multipart\/form-data\" \/>';\n\n\t\tif ($.isFunction(data)) {\n\t\t\ttype = callback;\n\t\t\tcallback = data;\n\t\t\tdata = {};\n\t\t}\n\n\t\tcheckbox = $('input:checkbox', this);\n\t\tchecked = $('input:checked', this);\n\t\tform = self.wrapAll(form).parent('form').attr('action', url);\n\n\t\t\/\/ Make sure radios and checkboxes keep original values\n\t\t\/\/ (IE resets checkd attributes when appending)\n\t\tcheckbox.removeAttr('checked');\n\t\tchecked.attr('checked', true);\n\n\t\tinputs = createInputs(data);\n\t\tinputs = inputs ? $(inputs).appendTo(form) : null;\n\n\t\tform.submit(function() {\n\t\t\tiframe.load(function() {\n\t\t\t\tvar data = handleData(this, type),\n\t\t\t\t\tchecked = $('input:checked', self);\n\n\t\t\t\tform.after(self).remove();\n\t\t\t\tcheckbox.removeAttr('checked');\n\t\t\t\tchecked.attr('checked', true);\n\t\t\t\tif (inputs) {\n\t\t\t\t\tinputs.remove();\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tiframe.remove();\n\t\t\t\t\tif (type === 'script') {\n\t\t\t\t\t\t$.globalEval(data);\n\t\t\t\t\t}\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback.call(self, data);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t});\n\t\t}).submit();\n\n\t\treturn this;\n\t};\n\n\tfunction createInputs(data) {\n\t\treturn $.map(param(data), function(param) {\n\t\t\treturn '<input type=\"hidden\" name=\"' + param.name + '\" value=\"' + param.value + '\"\/>';\n\t\t}).join('');\n\t}\n\n\tfunction param(data) {\n\t\tif ($.isArray(data)) {\n\t\t\treturn data;\n\t\t}\n\t\tvar params = [];\n\n\t\tfunction add(name, value) {\n\t\t\tparams.push({name:name, value:value});\n\t\t}\n\n\t\tif (typeof data === 'object') {\n\t\t\t$.each(data, function(name) {\n\t\t\t\tif ($.isArray(this)) {\n\t\t\t\t\t$.each(this, function() {\n\t\t\t\t\t\tadd(name, this);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tadd(name, $.isFunction(this) ? this() : this);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (typeof data === 'string') {\n\t\t\t$.each(data.split('&'), function() {\n\t\t\t\tvar param = $.map(this.split('='), function(v) {\n\t\t\t\t\treturn decodeURIComponent(v.replace(\/\\+\/g, ' '));\n\t\t\t\t});\n\n\t\t\t\tadd(param[0], param[1]);\n\t\t\t});\n\t\t}\n\n\t\treturn params;\n\t}\n\n\tfunction handleData(iframe, type) {\n\t\tvar data, contents = $(iframe).contents().get(0);\n\n\t\tif ($.isXMLDoc(contents) || contents.XMLDocument) {\n\t\t\treturn contents.XMLDocument || contents;\n\t\t}\n\t\tdata = $(contents).find('body').html();\n\n\t\tswitch (type) {\n\t\t\tcase 'xml':\n\t\t\t\tdata = parseXml(data);\n\t\t\t\tbreak;\n\t\t\tcase 'json':\n\t\t\t\tdata = window.eval('(' + data + ')');\n\t\t\t\tbreak;\n\t\t}\n\t\treturn data;\n\t}\n\n\tfunction parseXml(text) {\n\t\tif (window.DOMParser) {\n\t\t\treturn new DOMParser().parseFromString(text, 'application\/xml');\n\t\t} else {\n\t\t\tvar xml = new ActiveXObject('Microsoft.XMLDOM');\n\t\t\txml.async = false;\n\t\t\txml.loadXML(text);\n\t\t\treturn xml;\n\t\t}\n\t}\n\n})(jQuery);\n","_u":"js\/jquery.upload-1.0.2.js","exp":null,"desc":null,"etag":"94466a6-40d-5b6830cd"}