{"@R":"1332250112","type":"HorizontalWidget","subject":"graph","description":"graph","css":"div.graph {\n\/*  margin: 50px; *\/\n  height: 300px;\n  width: 650px;\n}\ndiv.choises {\n  float: right;\n  border: 1px solid #C08060;\n  padding: 5px;\n  width: 330px;\n  font-size: 0.8em;\n}\ndiv.choise  *{\n  vertical-align:middle;\n}\ndiv.choises h3 {\n  padding:0;\n  margin:0;\n  font-size: 1.2em;\n}\ndiv.choise > span {\n  border: 1px solid #404040;\n  font-size:0.4em;\n  padding:1px;\n}\n","js":"$(function () {\n  function clone(src) {\n    var ret;\n    if(src === null ){\n      return src;\n    }else if(src.constructor === Array) {\n      ret = [];\n    } else if(src.constructor === Object) {\n      ret = {};\n    } else {\n      return src;\n    }\n    for(var key in src) {\n      ret[key] = clone(src[key]);\n    }\n    return ret;\n  };\n  function plot(times,data,name){\n    this.times= times;\n    this.org  = data;\n    this.data = clone(this.org);\n    this.name = name;\n    var THIS = this;\n    this.yaxes = [{  \n      min: (THIS.org[0].min!==undefined)?THIS.org[0].min:null,\n      max: (THIS.org[0].max!==undefined)?THIS.org[0].max:null,\n      tickDecimals:0,\n      labelWidth :20,\n      reserveSpace:true,\n\/\/      tickFormatter: function(v,axis){\n\/\/\treturn v.toFixed(axis.tickDecimals) + \"(\" + THIS.org[0].dim +\")\";\n\/\/      }\n      mode: null\n    },{\n      labelWidth :40,\n      reserveSpace:true,\n      alignTicksWithAxis: 1,\n      position: \"right\"\n    }      \n\t\t  ];\n    for( var i in THIS.org ){\n      if ( THIS.org[i].yaxis==2 ) {\n\tthis.yaxes[1]={\t\n\t  min: (THIS.org[i].min!==undefined)?THIS.org[i].min:null,\n\t  max: (THIS.org[i].max!==undefined)?THIS.org[i].max:null,\n\t  tickDecimals:0,\n\t  reserveSpace:true,\n\t  labelWidth :40,\n\t  alignTicksWithAxis: 1,\n          position: \"right\",\n\/\/\t  tickFormatter: function(v,axis){\n\/\/\t    return v.toFixed(axis.tickDecimals) + \"(\" + THIS.org[i].dim +\")\";\n\/\/\t  }\n\t  mode: null\n\t};\n\tbreak;\n      }\n    }\n    this.colors = [];\n    var c = 0x808080;\n      $('<div id=\"cc'+this.name+'\" class=\"choises\"><h3>'+this.name+'<\/h3><\/div>').insertBefore('#'+this.name);\n    for( var i in this.org ) {\n      c += 0x654321;\n      this.colors.push('#'+c.toString(16).substring(0,6));\n        $('<div class=\"choise\"><span><span style=\"background-color: #' + c.toString(16).substring(0,6) + '\"width=\"8px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/span><\/span> <input id=\"cc'+this.name+'_'+i+'\" type=\"checkbox\" '+((this.org[i].hide)?\"\":checked=\"checked\")+' name=\"'+i+'\"><\/input><label for=\"cc'+this.name+'_'+i+'\" >'+this.org[i].label+'<\/label><\/div>').appendTo('#cc'+this.name);\n    }\n\n\n    $('#cc'+this.name+' input[type=\"checkbox\"]').change(function(ev){\n      THIS.draw();\n    });\n    this.check = function(){\n      for ( var i in this.data){\n\tthis.data[i].data = [];\n      }\n      var cs=[];\n\t$('#cc'+this.name + ' input[type=\"checkbox\"]:checked').each(function(){\n\t  cs.push($(this).attr('name'));\n\t});\n      for ( var c in cs ){\n\tvar i = cs[c];\n\tthis.data[i].data = this.org[i].data;\n      }\n    }\n\n    this.draw = function (){\n      this.check();\n      $.plot($('#'+this.name), this.data, {\n\tseries: {\n          lines: { show: true },\n          points: { show: true }\n\t},\n\tgrid: { hoverable: true, clickable: true },\n\txaxis: {\n\t  tickFormatter: function(v,axis){\n\t    if ( THIS.times[v] ) {\n\t      return THIS.times[v].substring(5,10).replace(\/-\/,'\/');\n\t    }\n\t    return \"\";\n\t  },\n\n\/\/\t  mode: \"time\", \n\t  mode: null\n\/\/\t  timeformat: \"%y\/%m\/%d-%H:%M\",\n\/\/\t  timeformat: \"%m\/%d<br>%H:%M\",\n\t},\n\tyaxes: this.yaxes,\n\tselection: { mode: \"x\" },\n\tlegend:{\n\t  show: false,\n\t  noColumns: 2,\n\t  backgroundOpacity: 0.1\n\t},\n\tcolors: this.colors\n      });    \n    var previousPoint = null;\n      $('#'+this.name).bind(\"plothover\", function (event, pos, item) {\n\tif (item) {\n          if (previousPoint != item.dataIndex) {\n            previousPoint = item.dataIndex;\n            \n              $('#tt'+THIS.name).remove();\n            var x = item.datapoint[0].toFixed(2),\n            y = item.datapoint[1].toFixed(2);\n            \n              $('<div id=\"tt'+THIS.name+'\">' + item.series.label + '(' + Math.floor(y) + ((item.series.dim)?' '+item.series.dim:'') + ') \/ '+THIS.times[Math.floor(x)]+' <\/div>').css( {\n\t\tposition: 'absolute',\n\t\tdisplay: 'none',\n\t\ttop: item.pageY + 5,\n\t\tleft: item.pageX + 5,\n\t\tborder: '1px solid #fdd',\n\t\tpadding: '2px',\n\t\t'background-color': '#fee',\n\t\topacity: 0.80\n              }).appendTo(\"body\").fadeIn(200);\n          }\n\t}\n\telse {\n            $('#tt'+THIS.name).remove();\n          previousPoint = null;            \n\t}\n      });\n    }\n  }\n  data['summary'][1].yaxis=2;\n  summary = new plot(data['times'],data['summary'],'summary');\n  summary.draw();\n  scores  = new plot(data['times'],data['scores'],'scores');\n  scores.draw();\n});\n","id":"","class":"","body":"<h1>summary<\/h1>\n<div id=\"summary\" class=\"graph\"><\/div>\n<h1>scores<\/h1>\n<div id=\"scores\" class=\"graph\"><\/div>\n<script>\n  var data = <?cs var:A.yslowviewer.@json ?>;\n<\/script>","action":["action:\/\/yslowviewer-action\/yslowviewer\/BeaconAction?get&graph"],"_u":"graph"}